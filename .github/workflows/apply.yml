name: 'apply'

on:
  push:
    branches:
      - master

env:
  tg_version: '0.26.2'
  aws_profile: |-
    [gitlab-ci-aws]
    region=us-east-1
    output=json
    aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
    aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}

defaults:
  run:
    shell: bash
    working-directory: 'envs/prod'

jobs:
  terragrunt:
    name: 'Terragrunt Apply'
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Install SSH key'
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: |
            github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
          config: |
            Host *
                StrictHostKeyChecking no
                UserKnownHostsFile=/dev/null
      - name: 'Configure AWS Credentials'
        run: |
          mkdir -p ~/.aws ;
          cat << EOF > ~/.aws/credentials
          ${{ env.aws_profile }}
          EOF;
          chmod 0600 ~/.aws/credentials
      - name: 'Setup Terragrunt'
        uses: autero1/action-terragrunt@v0.1.0
        with:
          terragrunt_version: ${{ env.tg_version }}
      - name: 'Terragrunt Apply'
        run: terragrunt apply-all --terragrunt-non-interactive
        env:
          TF_VAR_gitlab_rds_db_password: ${{ secrets.TF_VAR_GITLAB_RDS_DB_PASSWORD }}
          TF_VAR_gitlab_token: ${{ secrets.TF_VAR_GITLAB_TOKEN }}

  ansible:
    name: 'Ansible Playbook Run'
    needs: terragrunt
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ansible
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: 'Install SSH key'
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: |
            github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
          config: |
            Host *
                StrictHostKeyChecking no
                UserKnownHostsFile=/dev/null
      - name: 'Configure AWS Credentials'
        run: |
          mkdir -p ~/.aws ;
          cat << EOF > ~/.aws/credentials
          ${{ env.aws_profile }}
          EOF;
          chmod 0600 ~/.aws/credentials
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Ansible Python dependencies
        run: |
          pip3 install -r requirements.txt

      - name: Install Ansible requirements
        run: |
          ansible-galaxy install -r requirements.yml

      - name: Run Ansible
        run: |
          ansible-playbook gitlab.yml
